'use strict';
// Declare app level module which depends on views, and components
angular.module('myApp', [
    'ngRoute',
    'ngAnimate',
    'CustomDirectives',
    'Home',
	'Login',
	'SignUp',
	'ForgotPassword',
	'SplashScreen'// append more modules here
]).
config(['$routeProvider', function($routeProvider) {
    $routeProvider.
        when('/sign-up', {
            controller: 'SignUpCtrl',
            templateUrl: "pages/sign-up/sign-up.html"
        }).
        when('/forgot-password', {
            controller: 'ForgotPasswordCtrl',
            templateUrl: 'pages/forgot-password/forgot-password.html'
        }).
		when('/login', {
            controller: 'LoginCtrl',
            templateUrl: 'pages/login/login.html'
        }).
		when('/home', {
            controller: 'HomeCtrl',
            templateUrl: 'pages/home/home.html'
        }).
		when('/splash-screen', {
            controller: 'SplashScreenCtrl',
            templateUrl: 'pages/splash-screen/splash-screen.html'
        }).
		// append more pages here
        otherwise({redirectTo: '/splash-screen'});
}]);

// @codekit-append "js/custom-directives.js"
// @codekit-append "js/developer.js"
// @codekit-append "pages/home/home.js"
// @codekit-append "pages/login/login.js"
// @codekit-append "pages/sign-up/sign-up.js"
// @codekit-append "pages/forgot-password/forgot-password.js"
// @codekit-append "pages/splash-screen/splash-screen.js"
// append more files here

angular.module('CustomDirectives', [])

.directive('navbar', function() {
    return {
        restrict: 'E',
        templateUrl: 'partials/navbar.html',
        controller: ['$scope',function (scope) {
            scope.pages = SiteGlobals.pages;
            scope.showSideMenu = function () {
                var sideMenu = $("#side-menu");
                sideMenu.css("transform", "translate3d("+sideMenu.width()+"px, 0, 0px)");
            };
        }],
        link: function (scope, elem, attrs) {
            var sideMenu = elem.find("#side-menu");
            sideMenu.click(function () {
                sideMenu.css("transform", "translate3d(-"+sideMenu.width()+"px, 0, 0px)");
            });
        }
    };
})

.directive('equallySpaced', function() {
    return {
        restrict: 'A',
        link: function(scope, table, attrs){
            var tds = table.find("tr:first").find("th");
            var count = tds.length;
            tds.css("width", (table.width() / count)+"px");
        }
    };
})

.directive('size', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.size);
            elem.viewPortHeight(attrs.size);
        }
    };
})

.directive('width', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.width);
        }
    };
})

.directive('height', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortHeight(attrs.height);
        }
    };
})

.directive('centerV', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            center(elem);
            $(window).resize( function() {
                center(elem);
            });
            elem.resize( function() {
                center(elem);
            });
            function center(elem){
                var elemHeight = elem.height(),
                    parent = $(window),
                    parentHeight = parent.height(),
                    marginTop = (parentHeight - elemHeight) / 2;
                elem.css("margin-top",marginTop+"px");
            }
        }
    };
})
/*
* View-port font
* Set the size in vh and vw units in browsers that don't support vh and vw units
* */
.directive('vFont', function() {
    return {
        restrict: 'A',
        scope: {
            vh: '=vh',
            vw: '=vw'
        },
        link: function(scope, elem, attrs){
            if(scope.vh){
                var scrHeight = $(window).height();
                var px = (scrHeight * scope.vh) / 100;
                elem.css("font-size", px + "px");

                $(window).resize(function() {
                    var scrHeight = $(window).height();
                    var px = (scrHeight * scope.vh) / 100;
                    elem.css("font-size", px + "px");
                });
            }
            else if(scope.vw){
                var scrWidth = $(window).width();
                var px = (scrWidth * scope.vw) / 100;
                elem.css('font-size', px + "px");

                $(window).resize(function() {
                    var scrWidth = $(window).width();
                    var px = (scrWidth * scope.vw) / 100;
                    elem.css('font-size', px + "px");
                });
            }
        }
    };
});


'use strict';

angular.module('Home', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/home', {
    templateUrl: 'pages/home/home.html',
    controller: 'HomeCtrl'
  });
}])

.controller('HomeCtrl', ['$http', '$scope', function ( $http, scope ) {
    //SiteGlobals.checkLoggedIn();
    $("#menu-today").showLoader();
    $http.get(SiteGlobals.apiUrl+"menu/menu-today").then(function (response) {
        scope.menuToday = response.data.data;
        $("#menu-today").hideLoader();
    });
    scope.pages = SiteGlobals.pages;
}]);
'use strict';

angular.module('Login', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/login', {
    templateUrl: 'pages/login/login.html',
    controller: 'LoginCtrl'
  });
}])

.controller('LoginCtrl', ['$scope','$location','$http',function(scope,$location,$http) {
    scope.form = {};
    scope.login = function () {
        $.showLoader();
        $http.post(SiteGlobals.apiUrl+"officer-profile/login",scope.form).then(function (response) {
            if (!response.data.error) {
                $location.path("/home");
            } else {
                var type = response.data.error? "danger":"success";
                $.showMessage(response.data.data,type);
            }
            $.hideLoader();
        });
    };
}]);
'use strict';

angular.module('SignUp', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/sign-up', {
    templateUrl: 'pages/sign-up/sign-up.html',
    controller: 'SignUpCtrl'
  });
}])

.controller('SignUpCtrl', ['$scope','$http', function(scope,$http) {
    scope.form = {};
    scope.requestSignUp = function () {
        $.showLoader();
        $http.post(SiteGlobals.apiUrl+"officer-profile/sign-up",scope.form).then(function (response) {
            var type = response.data.error? "danger":"success";
            $.showMessage(response.data.data,type);
            if(!response.data.error)
                scope.form = {};
            $.hideLoader();
        });
    };
}]);
'use strict';

angular.module('ForgotPassword', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/forgot-password', {
    templateUrl: 'pages/forgot-password/forgot-password.html',
    controller: 'ForgotPasswordCtrl'
  });
}])

.controller('ForgotPasswordCtrl', [function() {

}]);
'use strict';

angular.module('SplashScreen', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/splash-screen', {
    templateUrl: 'pages/splash-screen/splash-screen.html',
    controller: 'SplashScreenCtrl'
  });
}])

.controller('SplashScreenCtrl', [function() {
    var authToken = localStorage.getItem("authToken");
    if(!authToken) window.location.href = "#/login";
    if(authToken){
        alert(authToken);
    }
}]);