'use strict';
// Declare app level module which depends on views, and components
angular.module('myApp', [
    'ngRoute',
    'ngAnimate',
    'CustomDirectives',
    'Api',
    'Home',
	'Login',
	'SignUp',
	'ForgotPassword',
	'SplashScreen',
	'Logout',
	'WeeklyMenu',
	'BillingDetails'// append more modules here
]).
config(['$routeProvider', function($routeProvider) {
    $routeProvider.otherwise({redirectTo: '/login'});
}]);

document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
    document.addEventListener("backbutton", function () {
        navigator.app.exitApp();
        return false;
    }, false);
}

// @codekit-append "js/custom-directives.js"
// @codekit-append "js/custom-services/Api.js"
// @codekit-append "js/developer.js"
// @codekit-append "pages/home/home.js"
// @codekit-append "pages/login/login.js"
// @codekit-append "pages/sign-up/sign-up.js"
// @codekit-append "pages/forgot-password/forgot-password.js"
// @codekit-append "pages/splash-screen/splash-screen.js"
// @codekit-append "pages/logout/logout.js"
// append more files here

angular.module('CustomDirectives', [])

.directive('navbar', function() {
    return {
        restrict: 'E',
        templateUrl: 'partials/navbar.html',
        controller: ['$scope','$rootScope',function (scope) {
            scope.pages = SiteGlobals.pages;
            scope.user = SiteGlobals.user();
            scope.showSideMenu = function () {
                var sideMenu = $("#side-menu");
                sideMenu.css("transform", "translate3d("+sideMenu.width()+"px, 0, 0px)");
            };
        }],
        link: function (scope, elem, attrs) {
            var sideMenu = elem.find("#side-menu");
            sideMenu.click(function () {
                sideMenu.css("transform", "translate3d(-"+sideMenu.width()+"px, 0, 0px)");
            });
        }
    };
})

.directive('equallySpaced', function() {
    return {
        restrict: 'A',
        link: function(scope, table, attrs){
            var tds = table.find("tr:first").find("th");
            var count = tds.length;
            tds.css("width", (table.width() / count)+"px");
        }
    };
})

.directive('size', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.size);
            elem.viewPortHeight(attrs.size);
        }
    };
})

.directive('width', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.width);
        }
    };
})

.directive('height', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortHeight(attrs.height);
        }
    };
})

.directive('centerV', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            center(elem);
            $(window).resize( function() {
                center(elem);
            });
            elem.resize( function() {
                center(elem);
            });
            function center(elem){
                var elemHeight = elem.height(),
                    parent = $(window),
                    parentHeight = parent.height(),
                    marginTop = (parentHeight - elemHeight) / 2;
                elem.css("margin-top",marginTop+"px");
            }
        }
    };
})
/*
* View-port font
* Set the size in vh and vw units in browsers that don't support vh and vw units
* */
.directive('vFont', function() {
    return {
        restrict: 'A',
        scope: {
            vh: '=vh',
            vw: '=vw'
        },
        link: function(scope, elem, attrs){
            if(scope.vh){
                var scrHeight = $(window).height();
                var px = (scrHeight * scope.vh) / 100;
                elem.css("font-size", px + "px");

                $(window).resize(function() {
                    var scrHeight = $(window).height();
                    var px = (scrHeight * scope.vh) / 100;
                    elem.css("font-size", px + "px");
                });
            }
            else if(scope.vw){
                var scrWidth = $(window).width();
                var px = (scrWidth * scope.vw) / 100;
                elem.css('font-size', px + "px");

                $(window).resize(function() {
                    var scrWidth = $(window).width();
                    var px = (scrWidth * scope.vw) / 100;
                    elem.css('font-size', px + "px");
                });
            }
        }
    };
});

angular.module('Api', [])
    .factory('Api', ['$http','$location', function($http,$location){
        var baseUrl = SiteGlobals.apiUrl;
        var defaultData = {
            authToken: SiteGlobals.authToken()
        };

        var post = function ( url, data, config ) {
            if(!data) data = defaultData;
            else angular.extend(data,defaultData);
            return $http.post( baseUrl+url, data, config );
        };

        var checkAndHandleError = function (response) {
            if (response.data.error) {
                $.showMessage(response.data.data, 'danger');
                if(response.data.errorType == 'login')
                {
                    localStorage.removeItem("authToken");
                    localStorage.removeItem("user");
                    window.location.reload();
                    $location.path("/login");
                }
            }
        };

        // build the api and return it
        return {
            post: post,
            checkAndHandleError: checkAndHandleError
        }

    }]);

'use strict';

angular.module('Home', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/home', {
    templateUrl: 'pages/home/home.html',
    controller: 'HomeCtrl'
  });
}])

.controller('HomeCtrl', ['Api', '$scope', function ( Api, scope ) {
    $("#menu-today").showLoader();
        Api.post("menu/menu-today").then(function (response) {
            Api.checkAndHandleError(response);
            scope.menuToday = response.data.data;
            $("#menu-today").hideLoader();
    });
    scope.pages = SiteGlobals.pages;
}]);
'use strict';

angular.module('Login', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/login', {
    templateUrl: 'pages/login/login.html',
    controller: 'LoginCtrl'
  });
}])

.controller('LoginCtrl', ['$scope','$location','$http','$rootScope',function(scope,$location,$http,$rootScope) {
    if( localStorage.getItem("authToken") )
        window.location.href = "#/home";
    scope.form = {username:"",password:""};
    scope.login = function () {
        $.showLoader();
        $http.post(SiteGlobals.apiUrl+"officer-profile/login",scope.form).then(function (response) {
            if (!response.data.error) {
                var res = JSON.parse(response.data.data);
                localStorage.setItem("authToken", res.authToken);
                localStorage.setItem("user", JSON.stringify(res.currentUser));
                $location.path("/home");
            } else {
                $.showMessage(response.data.data,"danger");
            }
            $.hideLoader();
        });
    };
}]);
'use strict';

angular.module('SignUp', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/sign-up', {
    templateUrl: 'pages/sign-up/sign-up.html',
    controller: 'SignUpCtrl'
  });
}])

.controller('SignUpCtrl', ['$scope','$http', function(scope,$http) {
    scope.form = {};
    scope.requestSignUp = function () {
        $.showLoader();
        $http.post(SiteGlobals.apiUrl+"officer-profile/sign-up",scope.form).then(function (response) {
            var type = response.data.error? "danger":"success";
            $.showMessage(response.data.data,type);
            if(!response.data.error)
                scope.form = {};
            $.hideLoader();
        });
    };
}]);
'use strict';

angular.module('ForgotPassword', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/forgot-password', {
    templateUrl: 'pages/forgot-password/forgot-password.html',
    controller: 'ForgotPasswordCtrl'
  });
}])

.controller('ForgotPasswordCtrl', [function() {

}]);
'use strict';

angular.module('SplashScreen', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/splash-screen', {
    templateUrl: 'pages/splash-screen/splash-screen.html',
    controller: 'SplashScreenCtrl'
  });
}])

.controller('SplashScreenCtrl', [function() {
    var authToken = localStorage.getItem("authToken");
    if(!authToken) window.location.href = "#/login";
    if(authToken){
        alert(authToken);
    }
}]);
'use strict';

angular.module('Logout', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/logout', {
    templateUrl: 'pages/logout/logout.html',
    controller: 'LogoutCtrl'
  });
}])

.controller('LogoutCtrl', ['Api','$location',function(Api,$location) {
    $.showLoader();
    Api.post("officer-profile/logout").then(function (res) {
        Api.checkAndHandleError(res);
        if(res.data.error){
            $.showMessage(res.data.data,"info");
            $location.path("/home");
        }else{
            localStorage.removeItem("authToken");
            localStorage.removeItem("user");
            window.location.reload();
            $location.path("/login");
        }
        $.hideLoader();
    });
}]);
'use strict';

angular.module('WeeklyMenu', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/weekly-menu', {
    templateUrl: 'pages/weekly-menu/weekly-menu.html',
    controller: 'WeeklyMenuCtrl'
  });
}])

.controller('WeeklyMenuCtrl', ['Api', '$scope', function ( Api, scope ) {
        $("#menu").showLoader();
        Api.post("menu/get").then(function (response) {
            Api.checkAndHandleError(response);
            scope.menu = response.data.data;
            $("#menu").hideLoader();
        });
}]);
'use strict';

angular.module('BillingDetails', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/billing-details', {
    templateUrl: 'pages/billing-details/billing-details.html',
    controller: 'BillingDetailsCtrl'
  });
}])

.controller('BillingDetailsCtrl', ['Api', '$scope', function ( Api, scope ) {
    var date = new Date();
    scope.form = {
        month: date.getMonth().toString(),
        year: date.getFullYear(),
        monthsList: Date.monthsList()
    };
    scope.form = {
        month: '10',
        year: 2015,
        monthsList: Date.monthsList()
    };

    scope.loadRecords = function () {
        $.showLoader();
        var data = {
            month: parseInt(scope.form.month)+1,
            year: scope.form.year
        };
        Api.post("officer-profile/billing-details",data).then(function (response) {
            Api.checkAndHandleError(response);
            scope.details = response.data.data;
            $.hideLoader();
        });
    };

    scope.loadRecords();

}]);